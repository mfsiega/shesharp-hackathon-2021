{"version":3,"sources":["welcome-background/welcome-background.jsx","shesharp-x-troopl/shesharp-x-troopl.jsx","Canvas.jsx","App.js","reportWebVitals.js","index.js"],"names":["WelcomeBackground","children","defaultProps","SheSharpTroopl","width","height","version","viewBox","xmlns","id","d","transform","strokeWidth","clipPath","fill","Canvas","props","messages","canvasRef","useRef","letterWidths","a","b","c","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","getWordWidth","word","sum","letter","letterRenderers","context","coord","delay","setTimeout","fillRect","origFillStyle","fillStyle","useEffect","canvas","current","getContext","clearRect","strokeStyle","min","max","xOffset","yOffset","message","length","Math","ceil","floor","random","console","log","split","wordWidth","ref","App","className","style","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a1b0897.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./welcome-background.styles.scss\";\n\nconst WelcomeBackground = ({ children }) => {\n  return <div>{children}</div>;\n};\n\n// We declare propTypes so when something else is given React will trow an error\nWelcomeBackground.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element),\n};\n\n// When props are not required you can set them here\nWelcomeBackground.defaultProps = {};\n\nexport default WelcomeBackground;\n","import React from \"react\";\n\nconst SheSharpTroopl = () => {\n  const fillColor = \"#231f20\";\n\n  return (\n    <svg\n      width=\"50mm\"\n      height=\"50mm\"\n      version=\"1.1\"\n      viewBox=\"0 0 210 210\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <clipPath id=\"a\">\n          <path d=\"M 0,595.28 H 841.89 V 0 H 0 Z\" />\n        </clipPath>\n      </defs>\n      <g transform=\"translate(0 -3.001)\">\n        <g\n          transform=\"matrix(.26458 0 0 .26458 -4.6036 108.16)\"\n          strokeWidth=\"3.7795\"\n        >\n          <path d=\"m166.7 191.6v62.2c0 4.3 1 7.5 3.1 9.4s5.6 2.9 10.6 2.9h12.1c1.7 0 3 1.3 3 3v21.4c0 1.7-1.3 3-3 3h-17.4c-27.4 0-41.1-13.3-41.1-39.9v-62h-12.3c-1.7 0-3-1.3-3-3v-20.6c0-1.7 1.3-3 3-3h12.3v-28.8c0-1.7 1.3-3 3-3h26.7c1.7 0 3 1.3 3 3v28.8h25.8c1.7 0 3 1.3 3 3v20.7c0 1.7-1.3 3-3 3h-25.8z\" />\n          <path d=\"m254.5 168.9c5.9-3.4 12.5-5.3 19.9-5.7 1.7-0.1 3.1 1.3 3.1 3v28c0 1.7-1.3 3-3 3h-5.5c-10.2 0-17.9 2.4-23.1 7.2s-7.8 13.2-7.8 25.1v61c0 1.7-1.3 3-3 3h-26.5c-1.7 0-3-1.3-3-3v-122.5c0-1.7 1.3-3 3-3h26.5c1.7 0 3 1.3 3 3v17c4.2-6.9 9.7-12.2 16.4-16.1z\" />\n          <path d=\"m584.2 168.8c7.3-3.9 15.7-5.9 25.2-5.9 11 0 20.9 2.7 29.8 8.1s15.9 13.1 21.1 23.1 7.8 21.5 7.8 34.7-2.6 24.8-7.8 34.9-12.2 18-21.1 23.6-18.8 8.4-29.8 8.4c-9.4 0-17.8-1.9-24.9-5.8-7.2-3.9-13-8.7-17.5-14.6v76.6c0 1.7-1.3 3-3 3h-26.5c-1.7 0-3-1.3-3-3v-183.9c0-1.7 1.3-3 3-3h26.5c1.7 0 3 1.3 3 3v15.6c4-6 9.8-10.9 17.2-14.8zm45.9 39.9c-3.2-5.6-7.4-9.9-12.5-12.9-5.2-2.9-10.8-4.4-16.8-4.4-5.9 0-11.4 1.5-16.6 4.5s-9.4 7.4-12.5 13.1c-3.2 5.7-4.8 12.5-4.8 20.2s1.6 14.5 4.8 20.2 7.3 10.1 12.5 13.1 10.7 4.5 16.6 4.5c6 0 11.6-1.5 16.8-4.6s9.4-7.5 12.5-13.2c3.2-5.7 4.8-12.5 4.8-20.4 0-7.8-1.6-14.4-4.8-20.1z\" />\n          <path d=\"m709.8 124.8v165.7c0 1.7-1.3 3-3 3h-26.5c-1.7 0-3-1.3-3-3v-165.7c0-1.7 1.3-3 3-3h26.5c1.7 0 3 1.3 3 3z\" />\n          <path d=\"m428.1 261.8c-7.6-0.1-13.8-2.8-18.9-8.2-1.2-1.3-2.3-2.7-3.2-4.3-0.5-0.8-0.6-1.8-0.2-2.7 1.9-5 2.8-10.8 2.8-17.5 0-12.2-3.1-21.6-9.2-28.2s-13.8-9.9-23.1-9.9h-32.6c-9.3 0-17 3.3-23.1 9.9s-9.2 16-9.2 28.2 3.1 21.6 9.4 28.2c6.2 6.5 13.8 9.7 22.9 9.9h21.8c1 0 2 0.6 2.6 1.4 6.2 10 14.5 17.8 24.7 23.4 0.1 0.1 0.2 0.1 0.3 0.2 0.5 0.3 0.5 1.1-0.2 1.3-5.3 1.3-10.8 2-16.6 2h-32.6c-12-0.1-22.9-2.9-32.7-8.2-10.1-5.5-18-13.3-23.8-23.3-5.8-10.1-8.7-21.7-8.7-34.8 0-13.2 2.8-24.8 8.5-34.8 5.6-10.1 13.4-17.8 23.3-23.3s21-8.2 33.4-8.2h32.6c12.4 0 23.5 2.7 33.4 8.2s17.7 13.3 23.3 23.3c5.6 10.1 8.5 21.7 8.5 34.8 0 11.5-2.2 21.8-6.7 30.9-0.5 1-1.5 1.7-2.7 1.7z\" />\n          <path d=\"m376.2 196.7c7.6 0.1 13.8 2.8 18.9 8.2 1.2 1.3 2.3 2.7 3.2 4.3 0.5 0.8 0.6 1.8 0.2 2.7-1.9 5-2.8 10.8-2.8 17.5 0 12.2 3.1 21.6 9.2 28.2s13.8 9.9 23.1 9.9h32.6c9.3 0 17-3.3 23.1-9.9s9.2-16 9.2-28.2-3.1-21.6-9.4-28.2c-6.2-6.5-13.8-9.7-22.9-9.9h-21.8c-1 0-2-0.6-2.6-1.4-6.2-10-14.5-17.8-24.7-23.4-0.1-0.1-0.2-0.1-0.3-0.2-0.5-0.3-0.5-1.1 0.2-1.3 5.3-1.3 10.8-2 16.6-2h32.6c12 0.1 22.9 2.9 32.7 8.2 10.1 5.5 18 13.3 23.8 23.3 5.8 10.1 8.7 21.7 8.7 34.8 0 13.2-2.8 24.8-8.5 34.8-5.6 10.1-13.4 17.8-23.3 23.3s-21 8.2-33.4 8.2h-32.6c-12.4 0-23.5-2.7-33.4-8.2s-17.7-13.3-23.3-23.3c-5.6-10.1-8.5-21.7-8.5-34.8 0-11.5 2.2-21.8 6.7-30.9 0.5-1 1.5-1.7 2.7-1.7z\" />\n        </g>\n        <g\n          transform=\"matrix(.35278 0 0 -.35278 -40.595 173.3)\"\n          strokeWidth=\"2.8346\"\n        >\n          <g\n            transform=\"matrix(1.169 0 0 1.169 -69.745 -50.037)\"\n            clipPath=\"url(#a)\"\n            strokeWidth=\"2.4249\"\n          >\n            <g transform=\"translate(308.95 306.82)\">\n              <path d=\"m0 0c6.798-10.191 11.104-19.746 12.988-31.311 2.567 0.466 5.117 1.09 7.669 1.633 2.311 0.492 4.779 0.36 7.004 1.133-0.812 5.461-2.099 10.843-3.889 15.781-4.343 11.996-13.343 21.698-19.195 32.897-19.14 36.629-3.515 73.531 29.585 84.943 11.986 4.132 28.319 4.556 39.669-1.532 17.69-9.491-3.286-37.367-12.972-44.808-7.371-5.662-0.1-18.382 7.385-12.633 16.226 12.463 32.76 36.119 24.235 57.454-6.935 17.361-29.76 19.76-45.853 18.617-45.842-3.257-75.299-41.897-61.713-91.278 3.109-11.302 8.68-21.29 15.087-30.896\" />\n            </g>\n            <g transform=\"translate(367.01 276.01)\">\n              <path d=\"m0 0c-9.03-0.523-18.064-0.957-27.097-1.71-0.894-0.075-1.823-0.19-2.742-0.293-2e-3 0.024-6e-3 0.047-0.01 0.07-0.112-0.016-0.204-0.066-0.329-0.066-0.018 0-0.03 9e-3 -0.047 9e-3 -1.988-0.486-4.049-0.464-6.062-0.905-2.56-0.562-5.127-1.175-7.705-1.642-0.015-2e-3 -0.027 1e-3 -0.039 1e-3 -0.145-0.045-0.294-0.081-0.461-0.094 4e-3 -0.019 8e-3 -0.039 0.01-0.059-19.167-4.813-39.628-14.86-50.141-29.477-5.327-7.409-6.393-15.342-0.155-22.461 7.369-8.404 22.876-5.686 32.137-3.381 19.416 4.832 29.922 20.639 32.562 38.932-4.308-0.41-8.749-1.748-12.891-2.981-0.163-0.047-0.31-0.055-0.461-0.066-0.098-0.059-0.198-0.113-0.339-0.133-0.555-0.079-1.059-0.297-1.594-0.445-1.1-4.335-2.942-8.436-5.891-11.996-3.881-4.686-9.599-7.422-15.276-9.202-3.119-0.978-20.682-4.513-16.988 2.22 6.024 10.976 24.653 18.251 35.587 22.42 1.156 0.441 2.319 0.837 3.487 1.212-2e-3 -0.014-4e-3 -0.029-7e-3 -0.045 0.07 0.015 0.129 0.043 0.209 0.043 4e-3 0 6e-3 -2e-3 8e-3 -2e-3 0.093 0.036 0.191 0.062 0.297 0.069 4.216 1.253 8.582 2.461 12.953 2.966 0.13 0.063 0.281 0.103 0.459 0.103 7e-3 0 0.011-5e-3 0.02-5e-3 0.094 0.045 0.188 0.09 0.306 0.104 0.202 0.023 0.406 0.043 0.608 0.063 0 5e-3 2e-3 9e-3 2e-3 0.013 7.263 1.019 14.64 1.355 22.007 1.648\" />\n            </g>\n            <g transform=\"translate(464.03 259.34)\">\n              <path d=\"m0 0c0.206 4.988 1.414 9.759 2.157 14.655-9.828 0.376-19.951 1.331-29.418 3.085 8e-3 0.014 0.014 0.029 0.023 0.043-0.137 0.035-0.276 0.06-0.41 0.094-1.097 0.092-2.191 0.217-3.271 0.41-0.71 0.01-1.408 0.082-2.096 0.205-2.727 0.133-5.468 0.18-8.17 0.375-0.019-2e-3 -0.032-0.012-0.052-0.012-0.514-7e-3 -1.015-0.013-1.525 0.043-0.061 7e-3 -0.104 0.038-0.159 0.051-4e-3 -0.012-0.011-0.023-0.017-0.033-10.548 0.457-13.655 0.521-25.703 0.424-0.316-2e-3 -0.829-0.02-1.426-0.045l-8.04-15.397c9.367 0.202 17.85 0.028 27.313 4e-3 -0.011-0.017-0.019-0.033-0.026-0.049 0.042 3e-3 0.075 0.023 0.122 0.023 5.256-0.06 10.927 0.251 16.085-0.855 0.016-2e-3 0.024-0.013 0.039-0.017l4e-3 8e-3c9.787-1.477 18.63-2.346 30.04-3.264 1.514-0.121 3.04-0.045 4.562 0.056-4e-3 0.071-0.035 0.122-0.032 0.196\" />\n            </g>\n            <g transform=\"translate(544.95 268.93)\">\n              <path d=\"m0 0c-7.918-7.872-18.521-12.78-28.929-16.436-7.297-2.563-25.509-8.585-31.391-0.56-1.768 2.407-2.578 5.372-2.666 8.604 0.063 0.011 0.125 0.029 0.186 0.04-0.02 0.2-0.057 0.393-0.02 0.615 0.837 5.117 1.773 10.428 3.913 15.18-0.015-4e-3 -0.028-7e-3 -0.041-0.012 0.116 0.235 0.24 0.466 0.361 0.7 0.359 0.746 0.759 1.473 1.188 2.183 4.259 7.369 10.294 13.523 15.762 15.293 9.907 3.204-1.009-10.401-3.476-12.183-2.417-1.744-5.152-3.031-7.991-4.096-3.448-4.812-4.524-11.001-5.457-16.764 6.324 1.492 12.482 3.704 18.31 6.698 9.283 4.77 21.067 18.039 17.179 29.538-3.841 11.369-14.745 13.409-25.258 10.009-9.696-3.136-16.481-12.545-21.148-21.068-2.001-3.657-3.833-8.104-5.16-12.845-8e-3 0-0.015 1e-3 -0.024 1e-3 5e-3 -0.127 0.041-0.241 0.02-0.377-0.677-4.721-1.904-9.321-2.102-14.12 0-0.013-8e-3 -0.023-8e-3 -0.036 0.034-10.278 3.862-19.694 14.746-23.544 22.858-8.084 56.15 6.725 72.351 22.832 6.697 6.66-3.65 17.004-10.345 10.348\" />\n            </g>\n            <g transform=\"translate(412.09 259.58)\">\n              <path d=\"m0 0c-0.148-2e-3 -0.275 0.025-0.39 0.07-0.149-0.029-0.304-0.05-0.459-0.057-0.132-0.243-0.261-0.484-0.406-0.738-6.185-10.91-12.235-21.865-14.774-34.261-1.886-9.209 12.216-13.131 14.108-3.891 2.54 12.398 8.916 23.033 15.085 33.916 0.992 1.753 1.625 2.875 2.26 4.044-4.518 1.855-10.78 1.003-15.424 0.917\" />\n            </g>\n            <g transform=\"translate(460.17 325.9)\">\n              <path d=\"m0 0c4.65 10.464 9.376 20.891 14.75 31.017 4.419 8.329-8.21 15.721-12.635 7.385-6.524-12.293-11.851-24.239-17.522-36.936-0.031-0.385-1.096-2.172-1.592-3.46-0.951-2.447-0.749-1.886-1.945-5.052-1.118-2.962-0.849-1.84-2.174-4.394 0.032 0-1.642-3.312-1.609-3.312-3.031-6.581-6.152-13.123-9.503-19.559-1.333-2.563-3.14-6.073-4.765-9.248 5.242-0.36 10.602-0.073 15.753-1.131 1.208 2.257 2.49 4.616 3.451 6.463 4.018 7.718 7.675 15.602 11.239 23.527\" />\n            </g>\n            <g transform=\"translate(418.76 330.53)\">\n              <path d=\"m0 0c6.706 12.499 12.893 25.25 17.877 38.581 3.315 8.856-10.834 12.644-14.108 3.891-5.456-14.588-12.344-28.469-19.778-42.079 5.346-0.141 10.657-0.47 16.009-0.393\" />\n            </g>\n            <g transform=\"translate(390.33 308.98)\">\n              <path d=\"m0 0c-6.16-10.635-12.372-21.24-18.218-32.023h-2e-3c-3e-3 -8e-3 -7e-3 -0.015-9e-3 -0.021-5e-3 -0.02-0.015-0.035-0.022-0.052-8e-3 -0.017-0.014-0.036-0.022-0.053-0.019-0.087-0.045-0.167-0.084-0.247-0.01-0.037-0.012-0.072-0.031-0.11-2.634-5.201-5.378-10.327-7.968-15.546-0.021-0.042-0.096-0.133-0.18-0.229-0.043-0.115-0.105-0.221-0.186-0.312-0.043-0.1-0.075-0.202-0.149-0.283-5.45-11.234-10.317-22.754-14.086-34.811-2.823-9.031 11.304-12.863 14.108-3.891 4.516 14.442 10.715 28.338 17.533 41.692 0.02 1e-3 0.041 1e-3 0.059 2e-3 0.047 0.15 0.128 0.283 0.236 0.396v2e-3c1.324 2.424 2.64 4.74 3.785 7.268 1.082 2.39 2.374 5.041 3.793 7.232 0.05 0.079 0.11 0.141 0.165 0.209 0.02 0.058 0.061 0.105 0.09 0.158h-2e-3c5.523 9.945 11.295 19.772 16.995 29.64-4.456 0.346-8.986 0.399-13.44 0.669\" />\n            </g>\n            <g transform=\"translate(401.28 326.79)\">\n              <path d=\"m0 0c-0.27 5e-3 -0.492 0.078-0.709 0.157l-0.037-0.067c-8.209 0.482-16.409 1.139-24.592 2.029-9.373 1.019-9.275-13.622 0-14.632 5.483-0.596 10.974-1.058 16.471-1.462 0.099 7e-3 2.616-0.28 2.726-0.286 4.969-0.301 1.154-0.03 6.37-0.359 8.369-0.53 6.66-0.213 6.872-0.31 8.379-0.376 16.221-0.501 24.611-0.585l6.478 14.53c-7.688 0.026-15.378 0.127-23.059 0.376\" />\n            </g>\n            <g transform=\"translate(472.09 326.12)\">\n              <path d=\"m0 0c-2.301-0.05-4.603-0.086-6.903-0.127-2.374-4.862-4.701-9.748-6.879-14.72 4.594 0.058 9.189 0.116 13.782 0.216 9.422 0.204 9.44 14.836 0 14.631\" />\n            </g>\n            <g transform=\"translate(413.86 264.35)\">\n              <path\n                d=\"M 0,0 C 0.234,0.449 0.431,0.82 0.449,0.82 0.302,0.545 0.146,0.275 0,0\"\n                fill={fillColor}\n              />\n            </g>\n          </g>\n        </g>\n        <path d=\"m122.95 111.82-29.558 32.379c-0.30325 0.33219-0.78918 0.35432-1.1214 0.0511l-5.1783-4.7271c-0.33219-0.30326-0.35432-0.78918-0.05107-1.1214l29.558-32.379c0.30324-0.3322 0.78918-0.35433 1.1214-0.0511l5.1783 4.7271c0.33219 0.30325 0.35433 0.78918 0.0511 1.1214z\" />\n        <path\n          transform=\"scale(.26458)\"\n          d=\"m350.92 399.71c-0.75936-0.0346-1.5324 0.23166-2.1602 0.80469l-19.57 17.865c-1.2555 1.1461-1.3394 2.9828-0.19336 4.2383l111.71 122.38c1.1461 1.2555 2.9828 1.3394 4.2383 0.19336l19.57-17.867c1.2555-1.1462 1.3394-2.9828 0.19336-4.2383l-111.71-122.38c-0.57305-0.62778-1.3188-0.9615-2.0781-0.9961z\"\n          strokeWidth=\"3.7795\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default SheSharpTroopl;\n","import React, { useRef, useEffect } from \"react\";\n\nconst Canvas = (props) => {\n\n  const getRandomInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n  const messages = [\n    'you got this! keep it up! #',\n    'have an awesome day! #',\n    'keep on keeping on! #',\n    'hang in there -- i believe in you! #',\n    'failure is the first step in every journey to success #',\n    'do not stop believing. say what you wanna say. every little thing is gonna be alright. #'\n  ]\n\n  const LETTER_SIZE = 5;\n  const X = 0;\n  const Y = 1;\n\n  const canvasRef = useRef(null);\n\n  const letterWidths = {\n    a: 5,\n    b: 5,\n    c: 6,\n    d: 5,\n    e: 4,\n    f: 5,\n    g: 5,\n    h: 5,\n    i: 3,\n    j: 4,\n    k: 5,\n    l: 4,\n    m: 6,\n    n: 6,\n    o: 5,\n    p: 5,\n    q: 7,\n    r: 5,\n    s: 4,\n    t: 5,\n    u: 5,\n    v: 5,\n    w: 5,\n    x: 5,\n    y: 5,\n    z: 5,\n    '!': 1,\n    '#': 6\n  };\n\n  const getWordWidth = (word) => {\n    let sum = 0;\n    for (const letter of word) {\n      sum += letterWidths[letter];\n    }\n    return sum;\n  };\n\n  const letterRenderers = {\n    a: (x, y, context) => {\n      for (const coord of [\n        [0, 30],\n        [0, 25],\n        [0, 20],\n        [0, 15],\n        [0, 10],\n        [0, 5],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 5],\n        [20, 10],\n        [20, 15],\n        [20, 20],\n        [20, 25],\n        [20, 30],\n        [5, 15],\n        [10, 15],\n        [15, 15],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5;\n    },\n    b: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [15, 15],\n        [10, 15],\n        [20, 10],\n        [20, 5],\n        [15, 0],\n        [10, 0],\n        [5, 0],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5;\n    },\n    c: (x, y, context) => {\n      for (const coord of [\n        [25, 5],\n        [20, 0],\n        [15, 0],\n        [10, 0],\n        [5, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [5, 25],\n        [10, 30],\n        [15, 30],\n        [20, 30],\n        [25, 25],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 6;\n    },\n    d: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [20, 15],\n        [20, 10],\n        [20, 5],\n        [15, 0],\n        [10, 0],\n        [5, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5;\n    },\n    e: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [5, 15],\n        [10, 15],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 4;\n    },\n    f: (x, y, context) => {\n      for (const coord of [\n        [0, 30],\n        [0, 25],\n        [0, 20],\n        [0, 15],\n        [0, 10],\n        [0, 5],\n        [0, 0],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 0],\n        [5, 15],\n        [10, 15],\n        [15, 15]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    g: (x, y, context) => {\n      for (const coord of [\n        [20, 5],\n        [15, 0],\n        [10, 0],\n        [5, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [20, 15],\n        [15, 15]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    h: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [20, 0],\n        [20, 5],\n        [20, 10],\n        [20, 15],\n        [20, 20],\n        [20, 25],\n        [20, 30],\n        [5, 15],\n        [10, 15],\n        [15, 15],\n        [20, 15]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    i: (x, y, context) => {\n      for (const coord of [\n        [5, 0],\n        [5, 5],\n        [5, 10],\n        [5, 15],\n        [5, 20],\n        [5, 25],\n        [5, 30],\n        [0, 0],\n        [10, 0],\n        [0, 30],\n        [10, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 3\n    },\n    j: (x, y, context) => {\n      for (const coord of [\n        [15, 0],\n        [15, 5],\n        [15, 10],\n        [15, 15],\n        [15, 20],\n        [15, 25],\n        [10, 30],\n        [5, 30],\n        [0, 25]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 4\n    },\n    k: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [15, 5],\n        [10, 10],\n        [5, 15],\n        [10, 20],\n        [15, 25],\n        [20, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    l: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 4;\n    },\n    m: (x, y, context) => {\n      for (const coord of [\n        [0, 30],\n        [0, 25],\n        [0, 20],\n        [0, 15],\n        [0, 10],\n        [0, 5],\n        [0, 0],\n        [5, 5],\n        [10, 10],\n        [15, 10],\n        [20, 5],\n        [25, 0],\n        [25, 5],\n        [25, 10],\n        [25, 15],\n        [25, 20],\n        [25, 25],\n        [25, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 6;\n    },\n    n: (x, y, context) => {\n      for (const coord of [\n        [0, 30],\n        [0, 25],\n        [0, 20],\n        [0, 15],\n        [0, 10],\n        [0, 5],\n        [0, 0],\n        [5, 5],\n        [10, 10],\n        [15, 15],\n        [20, 20],\n        [25, 25],\n        [25, 30],\n        [25, 20],\n        [25, 15],\n        [25, 10],\n        [25, 5],\n        [25, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 6;\n    },\n    o: (x, y, context) => {\n      for (const coord of [\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [20, 15],\n        [20, 10],\n        [20, 5],\n        [15, 0],\n        [10, 0],\n        [5, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    p: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 5],\n        [20, 10],\n        [20, 15],\n        [15, 20],\n        [10, 20],\n        [5, 20]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    q: (x, y, context) => {\n      for (const coord of [\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [25, 20],\n        [25, 25],\n        [30, 30],\n        [25, 15],\n        [25, 10],\n        [25, 5],\n        [20, 0],\n        [15, 0],\n        [10, 0],\n        [5, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 7\n    },\n    r: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [0, 30],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 5],\n        [20, 10],\n        [20, 15],\n        [15, 20],\n        [10, 20],\n        [5, 20],\n        [15, 25],\n        [20, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    s: (x, y, context) => {\n      for (const coord of [\n        [15, 0],\n        [10, 0],\n        [5, 0],\n        [0, 5],\n        [0, 10],\n        [5, 15],\n        [10, 15],\n        [15, 20],\n        [15, 25],\n        [10, 30],\n        [5, 30],\n        [0, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 4\n    },\n    t: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 0],\n        [10, 5],\n        [10, 10],\n        [10, 15],\n        [10, 20],\n        [10, 25],\n        [10, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    u: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [20, 15],\n        [20, 10],\n        [20, 5],\n        [20, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5;\n    },\n    v: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [5, 15],\n        [5, 20],\n        [5, 25],\n        [10, 25],\n        [10, 30],\n        [15, 25],\n        [15, 20],\n        [15, 15],\n        [20, 10],\n        [20, 5],\n        [20, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    w: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 25],\n        [5, 30],\n        [10, 25],\n        [10, 20],\n        [15, 30],\n        [20, 25],\n        [20, 20],\n        [20, 15],\n        [20, 10],\n        [20, 5],\n        [20, 0]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    x: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [5, 10],\n        [10, 15],\n        [15, 20],\n        [20, 25],\n        [20, 30],\n        [20, 0],\n        [20, 5],\n        [15, 10],\n        [5, 20],\n        [0, 25],\n        [0, 30],\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    y: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [5, 10],\n        [10, 15],\n        [10, 20],\n        [10, 25],\n        [10, 30],\n        [20, 0],\n        [20, 5],\n        [15, 10]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    z: (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [5, 0],\n        [10, 0],\n        [15, 0],\n        [20, 0],\n        [20, 5],\n        [15, 10],\n        [10, 15],\n        [5, 20],\n        [0, 25],\n        [0, 30],\n        [5, 30],\n        [10, 30],\n        [15, 30],\n        [20, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 5\n    },\n    \" \": (x, y, context) => {\n      return 2;\n    },\n    '#': (x, y, context) => {\n      const origFillStyle = context.fillStyle;\n      for (const coord of [\n        [0, 20],\n        [2, 20],\n        [4, 20],\n        [6, 20],\n        [8, 20],\n        [10, 20],\n        [12, 20],\n        [14, 20],\n        [16, 20],\n        [18, 20],\n        [20, 20],\n        [22, 20],\n        [24, 20],\n        [26, 20],\n        [28, 20],\n        [30, 20]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [2, 10],\n        [4, 10],\n        [6, 10],\n        [8, 10],\n        [10, 10],\n        [12, 10],\n        [14, 10],\n        [16, 10],\n        [18, 10],\n        [20, 10],\n        [22, 10],\n        [24, 10],\n        [26, 10],\n        [28, 10],\n        [30, 10],\n        [32, 10]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [10, 0],\n        [10, 2],\n        [10, 4],\n        [10, 6],\n        [10, 8],\n        [8, 10],\n        [8, 12],\n        [8, 14],\n        [8, 16],\n        [8, 18],\n        [8, 20],\n        [8, 22],\n        [8, 24],\n        [6, 26],\n        [6, 28],\n        [6, 30],\n        [6, 32]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [24, 0],\n        [24, 2],\n        [24, 4],\n        [24, 6],\n        [24, 8],\n        [22, 10],\n        [22, 12],\n        [22, 14],\n        [22, 16],\n        [22, 18],\n        [22, 20],\n        [22, 22],\n        [22, 24],\n        [20, 26],\n        [20, 28],\n        [20, 30],\n        [20, 32]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n        }, delay)\n        context.delay += 25\n      }\n      context.fillStyle = \"#00b29a\"\n      for (const coord of [\n        [0, 22],\n        [2, 22],\n        [4, 22],\n        [6, 22],\n        [8, 22],\n        [10, 22],\n        [12, 22],\n        [14, 22],\n        [16, 22],\n        [18, 22],\n        [20, 22],\n        [22, 22],\n        [24, 22],\n        [26, 22],\n        [28, 22],\n        [30, 22]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillStyle = \"#00b29a\"\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n          context.fillStyle = origFillStyle\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [2, 12],\n        [4, 12],\n        [6, 12],\n        [8, 12],\n        [10, 12],\n        [12, 12],\n        [14, 12],\n        [16, 12],\n        [18, 12],\n        [20, 12],\n        [22, 12],\n        [24, 12],\n        [26, 12],\n        [28, 12],\n        [30, 12],\n        [32, 12]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillStyle = \"#00b29a\"\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n          context.fillStyle = origFillStyle\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [12, 0],\n        [12, 2],\n        [12, 4],\n        [12, 6],\n        [12, 8],\n        [10, 10],\n        [10, 12],\n        [10, 14],\n        [10, 16],\n        [10, 18],\n        [10, 20],\n        [10, 22],\n        [10, 24],\n        [8, 26],\n        [8, 28],\n        [8, 30],\n        [8, 32]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillStyle = \"#00b29a\"\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n          context.fillStyle = origFillStyle\n        }, delay)\n        context.delay += 25\n      }\n      for (const coord of [\n        [26, 0],\n        [26, 2],\n        [26, 4],\n        [26, 6],\n        [26, 8],\n        [24, 10],\n        [24, 12],\n        [24, 14],\n        [24, 16],\n        [24, 18],\n        [24, 20],\n        [24, 22],\n        [24, 24],\n        [22, 26],\n        [22, 28],\n        [22, 30],\n        [22, 32]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillStyle = \"#00b29a\"\n          context.fillRect(x + coord[X], y + coord[Y], 2, 2)\n          context.fillStyle = origFillStyle\n        }, delay)\n        context.delay += 25\n      }\n      context.fillStyle = origFillStyle\n      return 7\n    },\n    '!': (x, y, context) => {\n      for (const coord of [\n        [0, 0],\n        [0, 5],\n        [0, 10],\n        [0, 15],\n        [0, 20],\n        [0, 30]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 1\n    },\n    '-': (x, y, context) => {\n      for (const coord of [\n        [0, 15],\n        [5, 15]\n      ]) {\n        const delay = context.delay;\n        setTimeout(() => {\n          context.fillRect(x + coord[X], y + coord[Y], LETTER_SIZE, LETTER_SIZE);\n        }, delay)\n        context.delay += 25\n      }\n      return 2\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = \"#000000\";\n    context.strokeStyle = \"#202020\"\n    context.delay = 0\n    let xOffset = 0;\n    let yOffset = 5;\n    const message = messages[getRandomInt(0, messages.length -1)]\n    console.log(message);\n    for (const word of message.split(\" \")) {\n      const wordWidth = getWordWidth(word);\n      console.log(xOffset)\n      console.log(wordWidth)\n      console.log(xOffset + wordWidth*LETTER_SIZE)\n      console.log(props.width)\n      if (xOffset + wordWidth * LETTER_SIZE >= props.width) {\n        xOffset = 0;\n        yOffset += 40;\n      }\n      for (let letter of word) {\n        console.log(letter)\n        xOffset +=\n          LETTER_SIZE *\n          (1 + letterRenderers[letter](xOffset, yOffset, context));\n      }\n      xOffset += 15;\n    }\n  }, []);\n\n  return <canvas ref={canvasRef} {...props} />;\n};\n\nexport default Canvas;\n","import \"./App.css\";\nimport React from \"react\";\nimport WelcomeBackground from \"./welcome-background/welcome-background\";\nimport SheSharpTroopl from \"./shesharp-x-troopl/shesharp-x-troopl\";\nimport Canvas from \"./Canvas\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Canvas height={400} width={800} />\n      <SheSharpTroopl style={{textAlign: \"right\"}}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}